
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'demo_dbt'
version: '1.0.0'

vars:
  current_champion: Lakers

# This setting configures which "profile" dbt uses for this project.
profile: 'snowflake'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!

source-paths: ["models"]
#model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
target-path: "target"

#clean-targets:         # directories to be removed by `dbt clean`
#  - "target"
#  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.

#on-run-start: "insert into demo_db.staging.dbt_audits(audit_type) values('run_start'); commit;"
#on-run-end: "insert into demo_db.staging.dbt_audits(audit_type) values('run_start'); commit;"
on-run-start: "{{ insert_audits('run_start') }}"
on-run-end: "{{ insert_audits('run_end') }}"



models:
    #pre-hook: "insert into demo_db.staging.dbt_audits(audit_type) values('model_start'); commit;"
    #post-hook: "insert into demo_db.staging.dbt_audits(audit_type) values('model_end'); commit;"
    #pre-hook: "{{ insert_audits('model_start') }}"
    #post-hook: "{{ insert_audits('model_end') }}"
    demo_dbt:
        example:
            +materialized: table
            +schema: staging
        sample_data:
            +materialized: table
            +schema: staging
        public:
            +materialized: table
            +schema: public